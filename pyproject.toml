[tool.poetry]
name = "python-boilerplate"
version = "0.1.0"
description = ""
authors = ["Marcin Sobczyk <marcinpiotrsobczyk@gmail.com>"]
packages = [
    { include = "python_boilerplate" },
]
include = [
    "settings.toml",
]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
pytest = "^7.4.3"
pillow = "^10.1.0"
asyncio = "^3.4.3"
ruff = "^0.1.3"
black = "^23.10.1"
mypy = "^1.6.1"
pydantic = "^2.4.2"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.black]
line-length = 120
preview = true


[tool.mypy]
strict = true
disallow_untyped_decorators = false
plugins = "pydantic.mypy"

[tool.ruff]
line-length = 120
select = [# https://beta.ruff.rs/docs/rules/
    "F",
    "E",
    "W",
    "C",
    "I",
    "N",
    "D",
    "UP",
    "YTT",
    "ASYNC",
    "BLE",
    "B",
    "A",
    "C4",
    "INP",
    "PIE",
    "T20",
    "PYI",
    "PT",
    "RSE",
    "RET",
    "SIM",
    "TID",
    "TCH",
    "ARG",
    "PTH",
    "ERA",
    "PL",
    "TRY",
    "FLY",
    "RUF",
]
ignore = [
    "E501", # line too long, handled by black
    "D100", # missing docstring in public module
    "D101", # missing docstring in public class
    "D102", # missing docstring in public method
    "D103", # missing docstring in public function
    "D104", # missing docstring in public package
    "D105", # missing docstring in magic method
    "D106", # missing docstring in public nested class
    "D107", # missing docstring in __init__
    "D203", # 1 blank line required before class docstring; because we re using D211
    "D212", # Multi-line docstring summary should start at the first line; because we re using D213
    "D401", # first line should be in imperative mood
    "B008", # in Typer it is common to do that
    "PT004", # fixture does not return anything, add leading underscore;  issue: pytest seems to ignore (not launch) auto-use fixtures with leading underscode
    "TRY003", # too restrictive
    "RUF012", # TODO: Check if we can fix it, it's kinda Textual-specific
]

[tool.ruff.isort]
known-first-party = ["clive", "wax", "schemas", "clive_local_tools"]
required-imports = ["from __future__ import annotations"]


[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
addopts = "--strict-markers"
